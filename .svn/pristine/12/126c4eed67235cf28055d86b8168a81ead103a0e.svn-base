using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using System.Data.SqlClient;
using Twee.Comm;


namespace Twee.DataMgr
{

    public class PrdCateDataMgr
    {
        #region  BasicMethod

        /// <summary>
        /// 是否存在该记录
        /// </summary>
        public bool Exists(Guid guid)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select count(1) from wn_prdCate");
            strSql.Append(" where guid=@guid ");
            SqlParameter[] parameters = {
					new SqlParameter("@guid", SqlDbType.UniqueIdentifier,16)			};
            parameters[0].Value = guid;

            return DbHelperSQL.Exists(strSql.ToString(), parameters);
        }


        /// <summary>
        /// 增加一条数据
        /// </summary>
        public bool Add(Twee.Model.PrdCate model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("insert into wn_prdCate(");
            strSql.Append("guid,name,layer,prtGuid,idx,icos,wnstate)");
            strSql.Append(" values (");
            strSql.Append("@guid,@name,@layer,@prtGuid,@idx,@icos,@wnstate)");
            SqlParameter[] parameters = {
					new SqlParameter("@guid", SqlDbType.UniqueIdentifier,16),
					new SqlParameter("@name", SqlDbType.NVarChar,50),
					new SqlParameter("@layer", SqlDbType.TinyInt,1),
					new SqlParameter("@prtGuid", SqlDbType.UniqueIdentifier,16),
					new SqlParameter("@idx", SqlDbType.Int,4),
					new SqlParameter("@icos", SqlDbType.NVarChar,50),
					new SqlParameter("@wnstate", SqlDbType.TinyInt,1)};
            parameters[0].Value = Guid.NewGuid();
            parameters[1].Value = model.name;
            parameters[2].Value = model.layer;
            parameters[3].Value = Guid.NewGuid();
            parameters[4].Value = model.idx;
            parameters[5].Value = model.icos;
            parameters[6].Value = model.wnstate;

            int rows = DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        /// <summary>
        /// 更新一条数据
        /// </summary>
        public bool Update(Twee.Model.PrdCate model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("update wn_prdCate set ");
            strSql.Append("name=@name,");
            strSql.Append("layer=@layer,");
            strSql.Append("prtGuid=@prtGuid,");
            strSql.Append("idx=@idx,");
            strSql.Append("icos=@icos,");
            strSql.Append("wnstate=@wnstate");
            strSql.Append(" where guid=@guid ");
            SqlParameter[] parameters = {
					new SqlParameter("@name", SqlDbType.NVarChar,50),
					new SqlParameter("@layer", SqlDbType.TinyInt,1),
					new SqlParameter("@prtGuid", SqlDbType.UniqueIdentifier,16),
					new SqlParameter("@idx", SqlDbType.Int,4),
					new SqlParameter("@icos", SqlDbType.NVarChar,50),
					new SqlParameter("@wnstate", SqlDbType.TinyInt,1),
					new SqlParameter("@guid", SqlDbType.UniqueIdentifier,16)};
            parameters[0].Value = model.name;
            parameters[1].Value = model.layer;
            parameters[2].Value = model.prtGuid;
            parameters[3].Value = model.idx;
            parameters[4].Value = model.icos;
            parameters[5].Value = model.wnstate;
            parameters[6].Value = model.guid;

            int rows = DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        /// <summary>
        /// 删除一条数据
        /// </summary>
        public bool Delete(Guid guid)
        {

            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from wn_prdCate ");
            strSql.Append(" where guid=@guid ");
            SqlParameter[] parameters = {
					new SqlParameter("@guid", SqlDbType.UniqueIdentifier,16)			};
            parameters[0].Value = guid;

            int rows = DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        /// <summary>
        /// 批量删除数据
        /// </summary>
        public bool DeleteList(string guidlist)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from wn_prdCate ");
            strSql.Append(" where guid in (" + guidlist + ")  ");
            int rows = DbHelperSQL.ExecuteSql(strSql.ToString());
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }


        /// <summary>
        /// 得到一个对象实体
        /// </summary>
        public Twee.Model.PrdCate GetModel(Guid guid)
        {

            StringBuilder strSql = new StringBuilder();
            strSql.Append("select  top 1 guid,name,layer,prtGuid,idx,icos,wnstate from wn_prdCate ");
            strSql.Append(" where guid=@guid ");
            SqlParameter[] parameters = {
					new SqlParameter("@guid", SqlDbType.UniqueIdentifier,16)			};
            parameters[0].Value = guid;

            Twee.Model.PrdCate model = new Twee.Model.PrdCate();
            DataSet ds = DbHelperSQL.Query(strSql.ToString(), parameters);
            if (ds.Tables[0].Rows.Count > 0)
            {
                return DataRowToModel(ds.Tables[0].Rows[0]);
            }
            else
            {
                return null;
            }
        }

        /// <summary>
        /// 得到一个对象实体
        /// </summary>
        public Twee.Model.PrdCate DataRowToModel(DataRow row)
        {
            Twee.Model.PrdCate model = new Twee.Model.PrdCate();
            if (row != null)
            {
                if (row["guid"] != null && row["guid"].ToString() != "")
                {
                    model.guid = new Guid(row["guid"].ToString());
                }
                if (row["name"] != null)
                {
                    model.name = row["name"].ToString();
                }
                if (row["layer"] != null && row["layer"].ToString() != "")
                {
                    model.layer = int.Parse(row["layer"].ToString());
                }
                if (row["prtGuid"] != null && row["prtGuid"].ToString() != "")
                {
                    model.prtGuid = new Guid(row["prtGuid"].ToString());
                }
                if (row["idx"] != null && row["idx"].ToString() != "")
                {
                    model.idx = int.Parse(row["idx"].ToString());
                }
                if (row["icos"] != null)
                {
                    model.icos = row["icos"].ToString();
                }
                if (row["wnstate"] != null && row["wnstate"].ToString() != "")
                {
                    model.wnstate = int.Parse(row["wnstate"].ToString());
                }
            }
            return model;
        }

        /// <summary>
        /// 获得数据列表
        /// </summary>
        public DataSet GetList(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select guid,name,layer,prtGuid,idx,icos,wnstate ");
            strSql.Append(" FROM wn_prdCate ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            return DbHelperSQL.Query(strSql.ToString());
        }

        /// <summary>
        /// 获得前几行数据
        /// </summary>
        public DataSet GetList(int Top, string strWhere, string filedOrder)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select ");
            if (Top > 0)
            {
                strSql.Append(" top " + Top.ToString());
            }
            strSql.Append(" guid,name,layer,prtGuid,idx,icos,wnstate ");
            strSql.Append(" FROM wn_prdCate ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            strSql.Append(" order by " + filedOrder);
            return DbHelperSQL.Query(strSql.ToString());
        }

        /// <summary>
        /// 获取记录总数
        /// </summary>
        public int GetRecordCount(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select count(1) FROM wn_prdCate ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            object obj = DbHelperSQL.GetSingle(strSql.ToString());
            if (obj == null)
            {
                return 0;
            }
            else
            {
                return Convert.ToInt32(obj);
            }
        }
        /// <summary>
        /// 分页获取数据列表
        /// </summary>
        public DataSet GetListByPage(string strWhere, string orderby, int startIndex, int endIndex)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("SELECT * FROM ( ");
            strSql.Append(" SELECT ROW_NUMBER() OVER (");
            if (!string.IsNullOrEmpty(orderby.Trim()))
            {
                strSql.Append("order by T." + orderby);
            }
            else
            {
                strSql.Append("order by T.guid desc");
            }
            strSql.Append(")AS Row, T.*  from wn_prdCate T ");
            if (!string.IsNullOrEmpty(strWhere.Trim()))
            {
                strSql.Append(" WHERE " + strWhere);
            }
            strSql.Append(" ) TT");
            strSql.AppendFormat(" WHERE TT.Row between {0} and {1}", startIndex, endIndex);
            return DbHelperSQL.Query(strSql.ToString());
        }

        /*
        /// <summary>
        /// 分页获取数据列表
        /// </summary>
        public DataSet GetList(int PageSize,int PageIndex,string strWhere)
        {
            SqlParameter[] parameters = {
                    new SqlParameter("@tblName", SqlDbType.VarChar, 255),
                    new SqlParameter("@fldName", SqlDbType.VarChar, 255),
                    new SqlParameter("@PageSize", SqlDbType.Int),
                    new SqlParameter("@PageIndex", SqlDbType.Int),
                    new SqlParameter("@IsReCount", SqlDbType.Bit),
                    new SqlParameter("@OrderType", SqlDbType.Bit),
                    new SqlParameter("@strWhere", SqlDbType.VarChar,1000),
                    };
            parameters[0].Value = "wn_prdCate";
            parameters[1].Value = "guid";
            parameters[2].Value = PageSize;
            parameters[3].Value = PageIndex;
            parameters[4].Value = 0;
            parameters[5].Value = 0;
            parameters[6].Value = strWhere;	
            return DbHelperSQL.RunProcedure("UP_GetRecordByPage",parameters,"ds");
        }*/

        #endregion  BasicMethod

        #region 后台方法

        /// <summary>
        /// 获取类别列表
        /// </summary>
        /// <param name="strWhere"></param>
        /// <returns></returns>

        public DataTable MgeGetPrdCateList(string strWhere)
        {
            try
            {
                StringBuilder strSql = new StringBuilder();
                strSql.Append("select guid,name,layer,prtGuid,idx,wnstate from dbo.wn_prdCate  where 1=1 ");
                if (!string.IsNullOrEmpty(strWhere))
                {
                    strSql.Append(" and ");
                    strSql.Append(strWhere);
                }
                DataSet ds = DbHelperSQL.Query(strSql.ToString());
                if (ds != null && ds.Tables.Count > 0)
                {
                    return ds.Tables[0];
                }
                else
                {
                    return null;
                }
            }
            catch (Exception ex)
            {
                
            }
            return null;

        }
        /// <summary>
        /// 添加类别
        /// </summary>
        /// <param name="guid"></param>
        /// <param name="name"></param>
        /// <param name="layer"></param>
        /// <param name="prtGuid"></param>
        /// <param name="idx"></param>
        /// <returns></returns>
        public bool MgeAddCate(Guid guid, string name, int layer, string prtGuid, int idx)
        {
            try
            {
                string srtsql = "insert into  dbo.wn_prdCate(guid,name,layer,prtGuid,idx,icos,wnstate) values(@guid,@name,@layer,@prtGuid,@idx,@icos,@wnstate)";
                SqlParameter[] parameters = {
					new SqlParameter("@guid", SqlDbType.UniqueIdentifier,16),
					new SqlParameter("@name", SqlDbType.NVarChar,50),
                    new SqlParameter("@layer", SqlDbType.TinyInt,1),
                    new SqlParameter("@prtGuid", SqlDbType.UniqueIdentifier,16),
                    new SqlParameter("@idx", SqlDbType.Int,4),
                    new SqlParameter("@icos", SqlDbType.NVarChar,50),
                    new SqlParameter("@wnstate", SqlDbType.TinyInt,1)        
         };
                parameters[0].Value = guid;
                parameters[1].Value = name;
                parameters[2].Value = layer;
                if (!string.IsNullOrEmpty(prtGuid))
                {
                    Guid pGuid = new Guid(prtGuid);
                    parameters[3].Value = pGuid;
                }
                else
                {
                    parameters[3].Value = null;
                }

                parameters[4].Value = idx;
                parameters[5].Value = null;
                parameters[6].Value = 1;

                int count = DbHelperSQL.ExecuteSql(srtsql, parameters);
                return count > 0 ? true : false;
            }
            catch (Exception ex)
            {
               
            }
            return false;
        }

        /// <summary>
        /// 修改类别
        /// </summary>
        /// <returns></returns>
        public bool MgeUpdateCate(Guid guid, string name, int layer, string prtGuid, int idx)
        {
            try
            {
                string srtsql = "update  dbo.wn_prdCate  set name=@name, layer=@layer, prtGuid=@prtGuid, idx=@idx, icos=@icos, wnstate=@wnstate where  guid=@guid ";
                SqlParameter[] parameters = {
					new SqlParameter("@guid", SqlDbType.UniqueIdentifier,16),
					new SqlParameter("@name", SqlDbType.NVarChar,50),
                    new SqlParameter("@layer", SqlDbType.TinyInt,1),
                    new SqlParameter("@prtGuid", SqlDbType.UniqueIdentifier,16),
                    new SqlParameter("@idx", SqlDbType.Int,4),
                    new SqlParameter("@icos", SqlDbType.NVarChar,50),
                    new SqlParameter("@wnstate", SqlDbType.TinyInt,1)        
         };
                parameters[0].Value = guid;
                parameters[1].Value = name;
                parameters[2].Value = layer;
                if (prtGuid != "")
                {
                    Guid pGuid = new Guid(prtGuid);
                    parameters[3].Value = pGuid;
                }
                else
                {
                    parameters[3].Value = null;
                }

                parameters[4].Value = idx;
                parameters[5].Value = null;
                parameters[6].Value = 1;

                int count = DbHelperSQL.ExecuteSql(srtsql, parameters);
                return count > 0 ? true : false;
            }
            catch (Exception ex)
            {
               
            }
            return false;


        }

        /// <summary>
        /// 删除类别
        /// </summary>
        /// <param name="guid"></param>
        /// <returns></returns>
        public bool MgeDeleteCate(Guid guid)
        {
            try
            {
                string srtsql = "delete from dbo.wn_prdCate  where guid=@guid or prtGuid=@guid ";
                SqlParameter[] parameters = {
					new SqlParameter("@guid", SqlDbType.UniqueIdentifier,16)};
                parameters[0].Value = guid;
                int count = DbHelperSQL.ExecuteSql(srtsql, parameters);
                return count > 0 ? true : false;
            }
            catch (Exception ex)
            {
              
            }
            return false;

        }

        public List<Twee.Model.PrdCate> _GetList() {
            List<Twee.Model.PrdCate> list = new List<Model.PrdCate>();
            var datatable = GetList(string.Empty).Tables[0];
            if (null == datatable)
                return null;
            foreach (DataRow row in datatable.Rows) {
                list.Add(DataRowToModel(row));
            }
            return list;
        }

        /// <summary>
        /// 修改类别名称
        /// </summary>
        /// <param name="guid"></param>
        /// <param name="typeName"></param>
        /// <returns></returns>
        public bool UpdateTypeName(string guid, string typeName)
        {
            string sql = "update dbo.wn_prdCate set name='"+typeName+"' where guid='"+guid+"';";
            return DbHelperSQL.ExecuteSql(sql)>0;
        }

        /// <summary>
        /// 获取下一次类别名称
        /// </summary>
        /// <param name="parentId"></param>
        /// <returns></returns>
        public List<string> GetSonTypeName(string parentId)
        {
            string sql = "select name from wn_prdCate where prtGuid='"+parentId+"'";
            DataTable dt = DbHelperSQL.Query(sql).Tables[0];
            if (dt == null || dt.Rows.Count == 0)
                return null;
            List<string> list = new List<string>();
            foreach (DataRow row in dt.Rows) {
                if (row["name"] != null)
                {
                    list.Add(row["name"].ToString());
                }
            }
            return list;
        }

        #endregion

        #region 叠图：类别列表

        /// <summary>
        /// 获得数据列表
        /// </summary>
        public DataSet GePicCate(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select icos imgurl,guid thing_id,type='thing',name label");
            strSql.Append(" FROM wn_prdCate where layer=0 ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" and " + strWhere);
            }
            return DbHelperSQL.Query(strSql.ToString());
        }

        #endregion
    }
}
